/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CommandApp2SplatImport } from './routes/command/app2/$'
import { Route as CommandApp1SplatImport } from './routes/command/app1/$'

// Create Virtual Routes

const LoginLazyImport = createFileRoute('/login')()
const IndexLazyImport = createFileRoute('/')()
const CommandApp2IndexLazyImport = createFileRoute('/command/app2/')()
const CommandApp1IndexLazyImport = createFileRoute('/command/app1/')()

// Create/Update Routes

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const CommandApp2IndexLazyRoute = CommandApp2IndexLazyImport.update({
  path: '/command/app2/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/command/app2/index.lazy').then((d) => d.Route),
)

const CommandApp1IndexLazyRoute = CommandApp1IndexLazyImport.update({
  path: '/command/app1/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/command/app1/index.lazy').then((d) => d.Route),
)

const CommandApp2SplatRoute = CommandApp2SplatImport.update({
  path: '/command/app2/$',
  getParentRoute: () => rootRoute,
} as any)

const CommandApp1SplatRoute = CommandApp1SplatImport.update({
  path: '/command/app1/$',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/command/app1/$': {
      id: '/command/app1/$'
      path: '/command/app1/$'
      fullPath: '/command/app1/$'
      preLoaderRoute: typeof CommandApp1SplatImport
      parentRoute: typeof rootRoute
    }
    '/command/app2/$': {
      id: '/command/app2/$'
      path: '/command/app2/$'
      fullPath: '/command/app2/$'
      preLoaderRoute: typeof CommandApp2SplatImport
      parentRoute: typeof rootRoute
    }
    '/command/app1/': {
      id: '/command/app1/'
      path: '/command/app1'
      fullPath: '/command/app1'
      preLoaderRoute: typeof CommandApp1IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/command/app2/': {
      id: '/command/app2/'
      path: '/command/app2'
      fullPath: '/command/app2'
      preLoaderRoute: typeof CommandApp2IndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  LoginLazyRoute,
  CommandApp1SplatRoute,
  CommandApp2SplatRoute,
  CommandApp1IndexLazyRoute,
  CommandApp2IndexLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/command/app1/$",
        "/command/app2/$",
        "/command/app1/",
        "/command/app2/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/command/app1/$": {
      "filePath": "command/app1/$.tsx"
    },
    "/command/app2/$": {
      "filePath": "command/app2/$.tsx"
    },
    "/command/app1/": {
      "filePath": "command/app1/index.lazy.tsx"
    },
    "/command/app2/": {
      "filePath": "command/app2/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
