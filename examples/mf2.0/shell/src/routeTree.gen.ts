/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router';

// Import Routes

import { Route as rootRoute } from './routes/__root';

// Create Virtual Routes

const LoginLazyImport = createFileRoute('/login')();
const IndexLazyImport = createFileRoute('/')();
const CommandApp2LazyImport = createFileRoute('/command/app2')();
const CommandApp1LazyImport = createFileRoute('/command/app1')();

// Create/Update Routes

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route));

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route));

const CommandApp2LazyRoute = CommandApp2LazyImport.update({
  path: '/command/app2',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/command/app2.lazy').then((d) => d.Route));

const CommandApp1LazyRoute = CommandApp1LazyImport.update({
  path: '/command/app1',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/command/app1.lazy').then((d) => d.Route));

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/login': {
      id: '/login';
      path: '/login';
      fullPath: '/login';
      preLoaderRoute: typeof LoginLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/command/app1': {
      id: '/command/app1';
      path: '/command/app1';
      fullPath: '/command/app1';
      preLoaderRoute: typeof CommandApp1LazyImport;
      parentRoute: typeof rootRoute;
    };
    '/command/app2': {
      id: '/command/app2';
      path: '/command/app2';
      fullPath: '/command/app2';
      preLoaderRoute: typeof CommandApp2LazyImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  LoginLazyRoute,
  CommandApp1LazyRoute,
  CommandApp2LazyRoute,
});

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/command/app1",
        "/command/app2"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/command/app1": {
      "filePath": "command/app1.lazy.tsx"
    },
    "/command/app2": {
      "filePath": "command/app2.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
